;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-06-23 09:22:03
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8049000 -- 0x8049001
; data inside code section at 0x8049001 -- 0x8049002
0x8049001:   0f                                                 |.               |
; function: function_8049002 at 0x8049002 -- 0x8049024
0x8049002:   1e                     	push ds
0x8049003:   fb                     	sti 
0x8049004:   53                     	push ebx
0x8049005:   83 ec 08               	sub esp, 8
0x8049008:   e8 43 01 00 00         	call 0x8049150 <__x86.get_pc_thunk.bx>
0x804900d:   81 c3 f3 2f 00 00      	add ebx, 0x2ff3
0x8049013:   8b 83 f8 ff ff ff      	mov eax, dword ptr [ebx - 8]
0x8049019:   85 c0                  	test eax, eax
0x804901b:   74 02                  	je 0x804901f <function_8049002+0x1d>
0x804901d:   ff d0                  	call eax
0x804901f:   83 c4 08               	add esp, 8
0x8049022:   5b                     	pop ebx
0x8049023:   c3                     	ret 
; section: .plt
; data inside code section at 0x8049030 -- 0x80490a0
0x8049030:   ff 35 04 c0 04 08 ff 25  08 c0 04 08 0f 1f 40 00   |.5.....%......@.|
0x8049040:   f3 0f 1e fb 68 00 00 00  00 e9 e2 ff ff ff 66 90   |....h.........f.|
0x8049050:   f3 0f 1e fb 68 08 00 00  00 e9 d2 ff ff ff 66 90   |....h.........f.|
0x8049060:   f3 0f 1e fb 68 10 00 00  00 e9 c2 ff ff ff 66 90   |....h.........f.|
0x8049070:   f3 0f 1e fb 68 18 00 00  00 e9 b2 ff ff ff 66 90   |....h.........f.|
0x8049080:   f3 0f 1e fb 68 20 00 00  00 e9 a2 ff ff ff 66 90   |....h ........f.|
0x8049090:   f3 0f 1e fb 68 28 00 00  00 e9 92 ff ff ff 66 90   |....h(........f.|
; section: .plt.sec
; function: function_80490a0 at 0x80490a0 -- 0x80490a1
; data inside code section at 0x80490a1 -- 0x80490a2
0x80490a1:   0f                                                 |.               |
; function: function_80490a2 at 0x80490a2 -- 0x80490aa
0x80490a2:   1e                     	push ds
0x80490a3:   fb                     	sti 
0x80490a4:   ff 25 0c c0 04 08      	jmp dword ptr [0x804c00c] <fflush>
; data inside code section at 0x80490aa -- 0x80490b0
0x80490aa:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_80490b0 at 0x80490b0 -- 0x80490b1
; data inside code section at 0x80490b1 -- 0x80490b2
0x80490b1:   0f                                                 |.               |
; function: function_80490b2 at 0x80490b2 -- 0x80490ba
0x80490b2:   1e                     	push ds
0x80490b3:   fb                     	sti 
0x80490b4:   ff 25 10 c0 04 08      	jmp dword ptr [0x804c010] <gets>
; data inside code section at 0x80490ba -- 0x80490c0
0x80490ba:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_80490c0 at 0x80490c0 -- 0x80490c1
; data inside code section at 0x80490c1 -- 0x80490c2
0x80490c1:   0f                                                 |.               |
; function: function_80490c2 at 0x80490c2 -- 0x80490ca
0x80490c2:   1e                     	push ds
0x80490c3:   fb                     	sti 
0x80490c4:   ff 25 14 c0 04 08      	jmp dword ptr [0x804c014] <puts>
; data inside code section at 0x80490ca -- 0x80490d0
0x80490ca:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_80490d0 at 0x80490d0 -- 0x80490d1
; data inside code section at 0x80490d1 -- 0x80490d2
0x80490d1:   0f                                                 |.               |
; function: function_80490d2 at 0x80490d2 -- 0x80490da
0x80490d2:   1e                     	push ds
0x80490d3:   fb                     	sti 
0x80490d4:   ff 25 18 c0 04 08      	jmp dword ptr [0x804c018] <system>
; data inside code section at 0x80490da -- 0x80490e0
0x80490da:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_80490e0 at 0x80490e0 -- 0x80490e1
; data inside code section at 0x80490e1 -- 0x80490e2
0x80490e1:   0f                                                 |.               |
; function: function_80490e2 at 0x80490e2 -- 0x80490ea
0x80490e2:   1e                     	push ds
0x80490e3:   fb                     	sti 
0x80490e4:   ff 25 1c c0 04 08      	jmp dword ptr [0x804c01c] <exit>
; data inside code section at 0x80490ea -- 0x80490f0
0x80490ea:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_80490f0 at 0x80490f0 -- 0x80490f1
; data inside code section at 0x80490f1 -- 0x80490f2
0x80490f1:   0f                                                 |.               |
; function: function_80490f2 at 0x80490f2 -- 0x80490fa
0x80490f2:   1e                     	push ds
0x80490f3:   fb                     	sti 
0x80490f4:   ff 25 20 c0 04 08      	jmp dword ptr [0x804c020] <__libc_start_main>
; data inside code section at 0x80490fa -- 0x8049100
0x80490fa:   66 0f 1f 44 00 00                                  |f..D..          |
; section: .text
; function: _start at 0x8049100 -- 0x8049101
; data inside code section at 0x8049101 -- 0x8049102
0x8049101:   0f                                                 |.               |
; function: function_8049102 at 0x8049102 -- 0x8049137
0x8049102:   1e                     	push ds
0x8049103:   fb                     	sti 
0x8049104:   31 ed                  	xor ebp, ebp
0x8049106:   5e                     	pop esi
0x8049107:   89 e1                  	mov ecx, esp
0x8049109:   83 e4 f0               	and esp, 0xfffffff0
0x804910c:   50                     	push eax
0x804910d:   54                     	push esp
0x804910e:   52                     	push edx
0x804910f:   e8 23 00 00 00         	call 0x8049137 <function_8049137>
0x8049114:   81 c3 ec 2e 00 00      	add ebx, 0x2eec
0x804911a:   8d 83 30 d3 ff ff      	lea eax, [ebx - 0x2cd0]
0x8049120:   50                     	push eax
0x8049121:   8d 83 c0 d2 ff ff      	lea eax, [ebx - 0x2d40]
0x8049127:   50                     	push eax
0x8049128:   51                     	push ecx
0x8049129:   56                     	push esi
0x804912a:   c7 c0 16 92 04 08      	mov eax, 0x8049216
0x8049130:   50                     	push eax
0x8049131:   e8 ba ff ff ff         	call 0x80490f0 <function_80490f0>
0x8049136:   f4                     	hlt 
; function: function_8049137 at 0x8049137 -- 0x804913b
0x8049137:   8b 1c 24               	mov ebx, dword ptr [esp]
0x804913a:   c3                     	ret 
; data inside code section at 0x804913b -- 0x8049140
0x804913b:   66 90 66 90 90                                     |f.f..           |
; function: _dl_relocate_static_pie at 0x8049140 -- 0x8049141
; data inside code section at 0x8049141 -- 0x8049142
0x8049141:   0f                                                 |.               |
; function: function_8049142 at 0x8049142 -- 0x8049145
0x8049142:   1e                     	push ds
0x8049143:   fb                     	sti 
0x8049144:   c3                     	ret 
; data inside code section at 0x8049145 -- 0x8049150
0x8049145:   66 90 66 90 66 90 66 90  66 90 90                  |f.f.f.f.f..     |
; function: __x86.get_pc_thunk.bx at 0x8049150 -- 0x8049154
0x8049150:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8049153:   c3                     	ret 
; data inside code section at 0x8049154 -- 0x8049160
0x8049154:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x8049160 -- 0x8049191
0x8049160:   b8 2c c0 04 08         	mov eax, 0x804c02c
0x8049165:   3d 2c c0 04 08         	cmp eax, 0x804c02c
0x804916a:   74 24                  	je 0x8049190 <deregister_tm_clones+0x30>
0x804916c:   b8 00 00 00 00         	mov eax, 0
0x8049171:   85 c0                  	test eax, eax
0x8049173:   74 1b                  	je 0x8049190 <deregister_tm_clones+0x30>
0x8049175:   55                     	push ebp
0x8049176:   89 e5                  	mov ebp, esp
0x8049178:   83 ec 14               	sub esp, 0x14
0x804917b:   68 2c c0 04 08         	push 0x804c02c
0x8049180:   ff d0                  	call eax
0x8049182:   83 c4 10               	add esp, 0x10
0x8049185:   c9                     	leave 
0x8049186:   c3                     	ret 
; data inside code section at 0x8049187 -- 0x8049190
0x8049187:   8d b4 26 00 00 00 00 66  90                        |..&....f.       |
0x8049190:   c3                     	ret 
; data inside code section at 0x8049191 -- 0x80491a0
0x8049191:   8d b4 26 00 00 00 00 8d  b4 26 00 00 00 00 90      |..&......&..... |
; function: register_tm_clones at 0x80491a0 -- 0x80491d9
0x80491a0:   b8 2c c0 04 08         	mov eax, 0x804c02c
0x80491a5:   2d 2c c0 04 08         	sub eax, 0x804c02c
0x80491aa:   89 c2                  	mov edx, eax
0x80491ac:   c1 e8 1f               	shr eax, 0x1f
0x80491af:   c1 fa 02               	sar edx, 2
0x80491b2:   01 d0                  	add eax, edx
0x80491b4:   d1 f8                  	sar eax, 1
0x80491b6:   74 20                  	je 0x80491d8 <register_tm_clones+0x38>
0x80491b8:   ba 00 00 00 00         	mov edx, 0
0x80491bd:   85 d2                  	test edx, edx
0x80491bf:   74 17                  	je 0x80491d8 <register_tm_clones+0x38>
0x80491c1:   55                     	push ebp
0x80491c2:   89 e5                  	mov ebp, esp
0x80491c4:   83 ec 10               	sub esp, 0x10
0x80491c7:   50                     	push eax
0x80491c8:   68 2c c0 04 08         	push 0x804c02c
0x80491cd:   ff d2                  	call edx
0x80491cf:   83 c4 10               	add esp, 0x10
0x80491d2:   c9                     	leave 
0x80491d3:   c3                     	ret 
; data inside code section at 0x80491d4 -- 0x80491d8
0x80491d4:   8d 74 26 00                                        |.t&.            |
0x80491d8:   c3                     	ret 
; data inside code section at 0x80491d9 -- 0x80491e0
0x80491d9:   8d b4 26 00 00 00 00                               |..&....         |
; function: __do_global_dtors_aux at 0x80491e0 -- 0x80491e1
; data inside code section at 0x80491e1 -- 0x80491e2
0x80491e1:   0f                                                 |.               |
; function: function_80491e2 at 0x80491e2 -- 0x8049209
0x80491e2:   1e                     	push ds
0x80491e3:   fb                     	sti 
0x80491e4:   80 3d 2c c0 04 08 00   	cmp byte ptr [0x804c02c], 0
0x80491eb:   75 1b                  	jne 0x8049208 <function_80491e2+0x26>
0x80491ed:   55                     	push ebp
0x80491ee:   89 e5                  	mov ebp, esp
0x80491f0:   83 ec 08               	sub esp, 8
0x80491f3:   e8 68 ff ff ff         	call 0x8049160 <deregister_tm_clones>
0x80491f8:   c6 05 2c c0 04 08 01   	mov byte ptr [0x804c02c], 1
0x80491ff:   c9                     	leave 
0x8049200:   c3                     	ret 
; data inside code section at 0x8049201 -- 0x8049208
0x8049201:   8d b4 26 00 00 00 00                               |..&....         |
0x8049208:   c3                     	ret 
; data inside code section at 0x8049209 -- 0x8049210
0x8049209:   8d b4 26 00 00 00 00                               |..&....         |
; function: frame_dummy at 0x8049210 -- 0x8049211
; data inside code section at 0x8049211 -- 0x8049212
0x8049211:   0f                                                 |.               |
; function: function_8049212 at 0x8049212 -- 0x8049216
0x8049212:   1e                     	push ds
0x8049213:   fb                     	sti 
0x8049214:   eb 8a                  	jmp 0x80491a0 <register_tm_clones>
; function: main at 0x8049216 -- 0x8049217
; data inside code section at 0x8049217 -- 0x8049218
0x8049217:   0f                                                 |.               |
; function: function_8049218 at 0x8049218 -- 0x80492ba
0x8049218:   1e                     	push ds
0x8049219:   fb                     	sti 
0x804921a:   8d 4c 24 04            	lea ecx, [esp + 4]
0x804921e:   83 e4 f0               	and esp, 0xfffffff0
0x8049221:   ff 71 fc               	push dword ptr [ecx - 4]
0x8049224:   55                     	push ebp
0x8049225:   89 e5                  	mov ebp, esp
0x8049227:   53                     	push ebx
0x8049228:   51                     	push ecx
0x8049229:   83 ec 50               	sub esp, 0x50
0x804922c:   e8 1f ff ff ff         	call 0x8049150 <__x86.get_pc_thunk.bx>
0x8049231:   81 c3 cf 2d 00 00      	add ebx, 0x2dcf
0x8049237:   c7 45 f4 00 00 00 00   	mov dword ptr [ebp - 0xc], 0
0x804923e:   83 ec 0c               	sub esp, 0xc
0x8049241:   8d 83 08 e0 ff ff      	lea eax, [ebx - 0x1ff8]
0x8049247:   50                     	push eax
0x8049248:   e8 73 fe ff ff         	call 0x80490c0 <function_80490c0>
0x804924d:   83 c4 10               	add esp, 0x10
0x8049250:   8b 83 fc ff ff ff      	mov eax, dword ptr [ebx - 4]
0x8049256:   8b 00                  	mov eax, dword ptr [eax]
0x8049258:   83 ec 0c               	sub esp, 0xc
0x804925b:   50                     	push eax
0x804925c:   e8 3f fe ff ff         	call 0x80490a0 <function_80490a0>
0x8049261:   83 c4 10               	add esp, 0x10
0x8049264:   83 ec 0c               	sub esp, 0xc
0x8049267:   8d 45 b4               	lea eax, [ebp - 0x4c]
0x804926a:   50                     	push eax
0x804926b:   e8 40 fe ff ff         	call 0x80490b0 <function_80490b0>
0x8049270:   83 c4 10               	add esp, 0x10
0x8049273:   8b 45 f4               	mov eax, dword ptr [ebp - 0xc]
0x8049276:   3d 43 44 44 43         	cmp eax, 0x43444443
0x804927b:   75 1c                  	jne 0x8049299 <function_8049218+0x81>
0x804927d:   83 ec 0c               	sub esp, 0xc
0x8049280:   8d 83 1a e0 ff ff      	lea eax, [ebx - 0x1fe6]
0x8049286:   50                     	push eax
0x8049287:   e8 44 fe ff ff         	call 0x80490d0 <function_80490d0>
0x804928c:   83 c4 10               	add esp, 0x10
0x804928f:   83 ec 0c               	sub esp, 0xc
0x8049292:   6a 00                  	push 0
0x8049294:   e8 47 fe ff ff         	call 0x80490e0 <function_80490e0>
0x8049299:   83 ec 0c               	sub esp, 0xc
0x804929c:   8d 83 27 e0 ff ff      	lea eax, [ebx - 0x1fd9]
0x80492a2:   50                     	push eax
0x80492a3:   e8 18 fe ff ff         	call 0x80490c0 <function_80490c0>
0x80492a8:   83 c4 10               	add esp, 0x10
0x80492ab:   b8 00 00 00 00         	mov eax, 0
0x80492b0:   8d 65 f8               	lea esp, [ebp - 8]
0x80492b3:   59                     	pop ecx
0x80492b4:   5b                     	pop ebx
0x80492b5:   5d                     	pop ebp
0x80492b6:   8d 61 fc               	lea esp, [ecx - 4]
0x80492b9:   c3                     	ret 
; data inside code section at 0x80492ba -- 0x80492c0
0x80492ba:   66 90 66 90 66 90                                  |f.f.f.          |
; function: __libc_csu_init at 0x80492c0 -- 0x80492c1
; data inside code section at 0x80492c1 -- 0x80492c2
0x80492c1:   0f                                                 |.               |
; function: function_80492c2 at 0x80492c2 -- 0x8049325
0x80492c2:   1e                     	push ds
0x80492c3:   fb                     	sti 
0x80492c4:   55                     	push ebp
0x80492c5:   e8 6b 00 00 00         	call 0x8049335 <__x86.get_pc_thunk.bp>
0x80492ca:   81 c5 36 2d 00 00      	add ebp, 0x2d36
0x80492d0:   57                     	push edi
0x80492d1:   56                     	push esi
0x80492d2:   53                     	push ebx
0x80492d3:   83 ec 0c               	sub esp, 0xc
0x80492d6:   89 eb                  	mov ebx, ebp
0x80492d8:   8b 7c 24 28            	mov edi, dword ptr [esp + 0x28]
0x80492dc:   e8 1f fd ff ff         	call 0x8049000 <_init>
0x80492e1:   8d 9d 0c ff ff ff      	lea ebx, [ebp - 0xf4]
0x80492e7:   8d 85 08 ff ff ff      	lea eax, [ebp - 0xf8]
0x80492ed:   29 c3                  	sub ebx, eax
0x80492ef:   c1 fb 02               	sar ebx, 2
0x80492f2:   74 29                  	je 0x804931d <function_80492c2+0x5b>
0x80492f4:   31 f6                  	xor esi, esi
0x80492f6:   8d b4 26 00 00 00 00   	lea esi, [esi]
0x80492fd:   8d 76 00               	lea esi, [esi]
0x8049300:   83 ec 04               	sub esp, 4
0x8049303:   57                     	push edi
0x8049304:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8049308:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x804930c:   ff 94 b5 08 ff ff ff   	call dword ptr [ebp + esi*4 - 0xf8]
0x8049313:   83 c6 01               	add esi, 1
0x8049316:   83 c4 10               	add esp, 0x10
0x8049319:   39 f3                  	cmp ebx, esi
0x804931b:   75 e3                  	jne 0x8049300 <function_80492c2+0x3e>
0x804931d:   83 c4 0c               	add esp, 0xc
0x8049320:   5b                     	pop ebx
0x8049321:   5e                     	pop esi
0x8049322:   5f                     	pop edi
0x8049323:   5d                     	pop ebp
0x8049324:   c3                     	ret 
; data inside code section at 0x8049325 -- 0x8049330
0x8049325:   8d b4 26 00 00 00 00 8d  74 26 00                  |..&.....t&.     |
; function: __libc_csu_fini at 0x8049330 -- 0x8049331
; data inside code section at 0x8049331 -- 0x8049332
0x8049331:   0f                                                 |.               |
; function: function_8049332 at 0x8049332 -- 0x8049335
0x8049332:   1e                     	push ds
0x8049333:   fb                     	sti 
0x8049334:   c3                     	ret 
; function: __x86.get_pc_thunk.bp at 0x8049335 -- 0x8049339
0x8049335:   8b 2c 24               	mov ebp, dword ptr [esp]
0x8049338:   c3                     	ret 
; section: .fini
; function: _fini at 0x804933c -- 0x804933d
; data inside code section at 0x804933d -- 0x804933e
0x804933d:   0f                                                 |.               |
; function: function_804933e at 0x804933e -- 0x8049354
0x804933e:   1e                     	push ds
0x804933f:   fb                     	sti 
0x8049340:   53                     	push ebx
0x8049341:   83 ec 08               	sub esp, 8
0x8049344:   e8 07 fe ff ff         	call 0x8049150 <__x86.get_pc_thunk.bx>
0x8049349:   81 c3 b7 2c 00 00      	add ebx, 0x2cb7
0x804934f:   83 c4 08               	add esp, 8
0x8049352:   5b                     	pop ebx
0x8049353:   c3                     	ret 

;;
;; Data Segment
;;

; section: .interp
0x80481b4:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x80481c4:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x8048228:   02 00 00 00 09 00 00 00  01 00 00 00 05 00 00 00   |................|
0x8048238:   00 20 00 20 00 00 00 00  09 00 00 00 ad 4b e3 c0   |. . .........K..|
0x8048248:   00                                                 |.               |
; section: .dynsym
0x8048248:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8048258:   15 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048268:   10 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048278:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x8048288:   2d 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |-...............|
0x8048298:   5a 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |Z........... ...|
0x80482a8:   1c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482b8:   34 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |4...............|
0x80482c8:   26 00 00 00 00 00 00 00  00 00 00 00 11 00 00 00   |&...............|
0x80482d8:   01 00 00 00 04 a0 04 08  04 00 00 00 11 00 11 00   |................|
0x80482e8:   00                                                 |.               |
; section: .dynstr
0x80482e8:   00 5f 49 4f 5f 73 74 64  69 6e 5f 75 73 65 64 00   |._IO_stdin_used.|
0x80482f8:   67 65 74 73 00 66 66 6c  75 73 68 00 65 78 69 74   |gets.fflush.exit|
0x8048308:   00 70 75 74 73 00 73 74  64 6f 75 74 00 73 79 73   |.puts.stdout.sys|
0x8048318:   74 65 6d 00 5f 5f 6c 69  62 63 5f 73 74 61 72 74   |tem.__libc_start|
0x8048328:   5f 6d 61 69 6e 00 6c 69  62 63 2e 73 6f 2e 36 00   |_main.libc.so.6.|
0x8048338:   47 4c 49 42 43 5f 32 2e  30 00 5f 5f 67 6d 6f 6e   |GLIBC_2.0.__gmon|
0x8048348:   5f 73 74 61 72 74 5f 5f  00 ??                     |_start__.?      |
; section: .gnu.version
0x8048352:   00 00 02 00 02 00 02 00  02 00 00 00 02 00 02 00   |................|
0x8048362:   02 00 01 00 ??                                     |....?           |
; section: .gnu.version_r
0x8048368:   01 00 01 00 46 00 00 00  10 00 00 00 00 00 00 00   |....F...........|
0x8048378:   10 69 69 0d 00 00 02 00  50 00 00 00 00 00 00 00   |.ii.....P.......|
0x8048388:   f8                                                 |.               |
; section: .rel.dyn
0x8048388:   f8 bf 04 08 06 05 00 00  fc bf 04 08 06 08 00 00   |................|
0x8048398:   0c                                                 |.               |
; section: .rel.plt
0x8048398:   0c c0 04 08 07 01 00 00  10 c0 04 08 07 02 00 00   |................|
0x80483a8:   14 c0 04 08 07 03 00 00  18 c0 04 08 07 04 00 00   |................|
0x80483b8:   1c c0 04 08 07 06 00 00  20 c0 04 08 07 07 00 00   |........ .......|
0x80483c8:   ??                                                 |?               |
; section: .rodata
0x804a000:   03 00 00 00 01 00 02 00  45 6e 74 65 72 20 70 61   |........Enter pa|
0x804a010:   73 73 70 68 72 61 73 65  3a 00 63 61 74 20 66 6c   |ssphrase:.cat fl|
0x804a020:   61 67 2e 74 78 74 00 54  72 79 20 61 67 61 69 6e   |ag.txt.Try again|
0x804a030:   2e 2e 2e 00 01                                     |.....           |
; section: .eh_frame_hdr
0x804a034:   01 1b 03 3b 48 00 00 00  08 00 00 00 fc ef ff ff   |...;H...........|
0x804a044:   8c 00 00 00 6c f0 ff ff  b0 00 00 00 cc f0 ff ff   |....l...........|
0x804a054:   64 00 00 00 0c f1 ff ff  78 00 00 00 e2 f1 ff ff   |d.......x.......|
0x804a064:   c4 00 00 00 8c f2 ff ff  f8 00 00 00 fc f2 ff ff   |................|
0x804a074:   44 01 00 00 01 f3 ff ff  58 01 00 00 14            |D.......X....   |
; section: .eh_frame
0x804a080:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a090:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a0a0:   60 f0 ff ff 3b 00 00 00  00 44 07 08 10 00 00 00   |`...;....D......|
0x804a0b0:   30 00 00 00 8c f0 ff ff  05 00 00 00 00 00 00 00   |0...............|
0x804a0c0:   20 00 00 00 44 00 00 00  68 ef ff ff 70 00 00 00   | ...D...h...p...|
0x804a0d0:   00 0e 08 46 0e 0c 4a 0f  0b 74 04 78 00 3f 1a 39   |...F..J..t.x.?.9|
0x804a0e0:   2a 32 24 22 10 00 00 00  68 00 00 00 b4 ef ff ff   |*2$"....h.......|
0x804a0f0:   60 00 00 00 00 00 00 00  30 00 00 00 7c 00 00 00   |`.......0...|...|
0x804a100:   16 f1 ff ff a4 00 00 00  00 48 0c 01 00 49 10 05   |.........H...I..|
0x804a110:   02 75 00 42 0f 03 75 78  06 10 03 02 75 7c 02 8b   |.u.B..ux....u|..|
0x804a120:   c1 0c 01 00 41 c3 41 c5  43 0c 04 04 48 00 00 00   |....A.A.C...H...|
0x804a130:   b0 00 00 00 8c f1 ff ff  65 00 00 00 00 45 0e 08   |........e....E..|
0x804a140:   85 02 4c 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..L....A....A...|
0x804a150:   05 43 0e 20 6d 0e 24 41  0e 28 44 0e 2c 44 0e 30   |.C. m.$A.(D.,D.0|
0x804a160:   4d 0e 20 47 0e 14 41 c3  0e 10 41 c6 0e 0c 41 c7   |M. G..A...A...A.|
0x804a170:   0e 08 41 c5 0e 04 00 00  10 00 00 00 fc 00 00 00   |..A.............|
0x804a180:   b0 f1 ff ff 05 00 00 00  00 00 00 00 10 00 00 00   |................|
0x804a190:   10 01 00 00 a1 f1 ff ff  04 00 00 00 00 00 00 00   |................|
0x804a1a0:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804bf08:   10 92 04 08 e0                                     |.....           |
; section: .fini_array
0x804bf0c:   e0 91 04 08 01                                     |.....           |
; section: .dynamic
0x804bf10:   01 00 00 00 46 00 00 00  0c 00 00 00 00 90 04 08   |....F...........|
0x804bf20:   0d 00 00 00 3c 93 04 08  19 00 00 00 08 bf 04 08   |....<...........|
0x804bf30:   1b 00 00 00 04 00 00 00  1a 00 00 00 0c bf 04 08   |................|
0x804bf40:   1c 00 00 00 04 00 00 00  f5 fe ff 6f 28 82 04 08   |...........o(...|
0x804bf50:   05 00 00 00 e8 82 04 08  06 00 00 00 48 82 04 08   |............H...|
0x804bf60:   0a 00 00 00 69 00 00 00  0b 00 00 00 10 00 00 00   |....i...........|
0x804bf70:   15 00 00 00 00 00 00 00  03 00 00 00 00 c0 04 08   |................|
0x804bf80:   02 00 00 00 30 00 00 00  14 00 00 00 11 00 00 00   |....0...........|
0x804bf90:   17 00 00 00 98 83 04 08  11 00 00 00 88 83 04 08   |................|
0x804bfa0:   12 00 00 00 10 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804bfb0:   fe ff ff 6f 68 83 04 08  ff ff ff 6f 01 00 00 00   |...oh......o....|
0x804bfc0:   f0 ff ff 6f 52 83 04 08  00 00 00 00 00 00 00 00   |...oR...........|
0x804bfd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bfe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bff0:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804bff8:   00 00 00 00 00 00 00 00  10                        |.........       |
; section: .got.plt
0x804c000:   10 bf 04 08 00 00 00 00  00 00 00 00 40 90 04 08   |............@...|
0x804c010:   50 90 04 08 60 90 04 08  70 90 04 08 80 90 04 08   |P...`...p.......|
0x804c020:   90 90 04 08 00                                     |.....           |
; section: .data
0x804c024:   00 00 00 00 00 00 00 00  00                        |.........       |
