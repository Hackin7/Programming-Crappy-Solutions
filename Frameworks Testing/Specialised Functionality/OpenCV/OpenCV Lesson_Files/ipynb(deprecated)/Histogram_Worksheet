{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Histogram_Worksheet","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"2off8OEXe5tZ","colab_type":"text"},"source":["\n","Static Histogram\n","\n"]},{"cell_type":"code","metadata":{"id":"b5nuHHWKey9_","colab_type":"code","colab":{}},"source":["import ___  # Importing cv2 library\n","from matplotlib import pyplot as plt  # Importing matplotlib library\n","\n","# File name and path goes here\n","file = \"___________\" # enter your file name\n","\n","color = 'rgb'\n","# Number of intervals on the x-axis\n","bins = 256 # Color intensity values 0-255\n","\n","if ___________:  # Colored Images\n","    img = cv2.imread(file) # Process the image from file\n","\n","    for i, col in enumerate(color):\n","        # create a column with index (bins) and the corresponding color\n","        histogram = cv2.calcHist([img], [i], None, [bins], [0,256])\n","\n","        #plot graph using matplotlib, takes in the color 'b','g','r'\n","        plt.plot(histogram, color = col)\n","\n","        plt.title('Histogram (RGB)') # Title of graph\n","\n","else: # Monochrome Image\n","    # read file as array, 0 represents  conversion to monochrome\n","    img = cv2.imread(file, 0)\n","\n","    # changes the existing array to 1 dimension\n","    img = __________\n","\n","    # create a column with index (bins) but only 1 'color'\n","    histogram = cv2.calcHist([img], [0], None, [bins], [0,256])\n","    \n","    plt.plot(histogram)\n","\n","    # Title of graph\n","    plt.title('Histogram (B&W)')\n","\n","plt.______(\"Bin\") # Label the x-axis\n","plt.______(\"Frequency\") # Label the y-axis\n","plt.show() # Show the graph by creating the window"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"szKafM53g1hN","colab_type":"text"},"source":["Live Histogram"]},{"cell_type":"code","metadata":{"id":"6DwUbkV-g3DK","colab_type":"code","colab":{}},"source":["# Import relevant libraries\n","import ___ # Open CV library\n","from __________ import pyplot as plt # Matplotlib library\n","\n","# File name / recording Video goes here\n","cap = cv2.VideoCapture(0)\n","\n","color = 'rgb'\n","\n","# Number of intervals on the x-axis\n","bins = 256 # Color intensity values 0-255\n","\n","# continues running while video is on\n","while ____:\n","    read_success, img = cap.______ # Process the image from file\n","    if color == 'rgb':  # Colored Images\n","        for i, col in enumerate(color):\n","            # create a column with index (bins) and the corresponding color\n","            histogram = cv2.calcHist([img], [i], None, [bins], [0,256])\n","            #plot graph using matplotlib, takes in the color 'b','g','r'\n","            plt.plot(histogram, color = col)\n","            plt.title('Histogram (RGB)') # Title of graph\n","\n","    else: # Monochrome Image\n","        # changes the existing array to 1 dimension\n","        monochrome_img = img.ravel()\n","\n","        # create a column with index (bins) but only 1 'color'\n","        histogram = cv2.calcHist([monochrome_img], [0], None, [bins], [0,256])\n","        plt.plot(histogram)\n","\n","        # Title of graph\n","        plt.title('Histogram (B&W)')\n","\n","    # gets total number of pixels and sets arbitrary value\n","    numpix =  int((img.shape[0]*img.shape[1])/30)\n","\n","      #get current axis and set a limit on the y values\n","    plt.gca().set_ylim([0, numpix])\n","\n","      # refreshes the graph by pausing the graph\n","    _____________\n","\n","\n","    plt.______(\"Bins\") # Label the x-axis\n","    plt.______(\"Frequency\") # Label the y-axis\n","    cv2.imshow(\"Video\",img)\n","    plt._____ # Clears the figure but keeps the window\n","      \n","      # Program exits when user presses the 'q' key\n","    if cv2.waitKey(1) == ord('q'):\n","            break\n","\n","# Release the camera\n","cap.release()\n","# Close all the windows\n","cv2.destroyAllWindows()"],"execution_count":0,"outputs":[]}]}